/**
 * CSCI 3420: Optimization and Uncertainty
 * Assignment 1: Markov Decision Processes
 * Authors: Adrienne Miller and Ana√Øs Sarrazin
 * 22 April 2020
 * 
 * This class models the different probabilities that can occur based on the state and action taken based on the following information:
 *      1) With probability 0.8, the agent goes in the intended directions.
 *      2) With probability 0.1, it goes in a direction 90 degrees clockwise.
 *      3) With probability 0.1, it goes in a direction 90 degrees counterclockwise. 
 *      4) In all cases, if it hits a wall it remains in the square it started in. 
 *      5) If it enters the square marked +1 or either of the two squares marked -1, no further mouvements are possible.
 * The main class uses this transition matrix created in the different solution techniques. 
 * 
 */
public class TransitionFunction
{
 
    // Constants for the actions
    private static int N;               // Constant for North
    private static int E;               // Constant for East
    private static int S;               // Constant for South
    private static int W;               // Constant for West
 
    // Constants for Special locations 
    private static int posLocationWithKey;
    private static int posLocationWithoutKey;
    private static int negLocation1WithKey;
    private static int negLocation1WithoutKey;
    private static int negLocation2WithKey;
    private static int negLocation2WithoutKey;
    private static int key; 
    private static int loseKeyWithKey; 
    private static int loseKeyWithoutKey; 

    private static double keyLoss; 
    private static int currAction;
    private static double[][][] T;      

    /**
     * Constructor for objects of class TransitionFunction. 
     */
    public TransitionFunction(double keyLoss)
    {
        this.T = new double [65][5][65]; 
        this.N = 1;
        this.E = 2;
        this.S = 3;
        this.W = 4;
        this.keyLoss = keyLoss; 
        this.posLocationWithKey = 28;
        this.posLocationWithoutKey = 29;
        this.negLocation1WithKey = 44;
        this.negLocation1WithoutKey = 45;
        this.negLocation2WithKey = 48;
        this.negLocation2WithoutKey = 49;
        this.key = 64;
        this.loseKeyWithKey = 40; 
        this.loseKeyWithoutKey = 41; 
        makeGrid(); 
    }
    
    /**
     * Purpose: This retrieves a grid holding all the transition values.
     * Parameters: N/A.
     * Return Value: A transition grid.
     */
    public static  double[][][] getGrid(){
        return T; 
    }
    
    /**
     * Purpose: This holds and lists constant values for the probability and locations of each state 0 through 64 in the 
     * transition matrix T[state][action][nextState].
     * Parameters: N/A.
     * Return Value: N/A.
     */
    private static void makeGrid(){ 

        T[0][N][30] = 0.8; 
        T[0][N][0] = 0.1; 
        T[0][N][2] = 0.1; 

        T[0][E][2] = 0.8; 
        T[0][E][0] = 0.1; 
        T[0][E][30] = 0.1; 

        T[0][W][0] = .9; 
        T[0][W][30] = .1;

        T[0][S][0] = .9; 
        T[0][S][2] = .1; 

        T[1][N][31] = 0.8; 
        T[1][N][1] = 0.1; 
        T[1][N][3] = 0.1; 

        T[1][E][3] = 0.8; 
        T[1][E][1] = 0.1; 
        T[1][E][31] = 0.1; 

        T[1][W][1] = .9; 
        T[1][W][31] = .1;

        T[1][S][1] = .9; 
        T[1][S][3] = .1; 

        T[2][N][32] = .8; 
        T[2][N][0] = .1;
        T[2][N][4] = .1;

        T[2][E][4] = .8; 
        T[2][E][32] = .1;
        T[2][E][2] = .1;

        T[2][W][0] = .8; 
        T[2][W][32] = .1; 
        T[2][W][2] = .1; 

        T[2][S][2] = .8; 
        T[2][S][0] = .1; 
        T[2][S][4] = .1;

        T[3][N][33] = .8; 
        T[3][N][1] = .1;
        T[3][N][5] = .1;

        T[3][E][5] = .8; 
        T[3][E][33] = .1;
        T[3][E][3] = .1;

        T[3][W][1] = .8; 
        T[3][W][33] = .1; 
        T[3][W][3] = .1; 

        T[3][S][3] = .8; 
        T[3][S][1] = .1; 
        T[3][S][5] = .1;

        T[4][N][34] = .8; 
        T[4][N][2] = .1;
        T[4][N][6] = .1;

        T[4][E][6] = .8; 
        T[4][E][34] = .1;
        T[4][E][4] = .1;

        T[4][W][2] = .8; 
        T[4][W][34] = .1; 
        T[4][W][4] = .1; 

        T[4][S][4] = .8; 
        T[4][S][2] = .1; 
        T[4][S][6] = .1;

        T[5][N][35] = .8; 
        T[5][N][3] = .1;
        T[5][N][7] = .1;

        T[5][E][7] = .8; 
        T[5][E][35] = .1;
        T[5][E][5] = .1;

        T[5][W][3] = .8; 
        T[5][W][35] = .1; 
        T[5][W][5] = .1; 

        T[5][S][5] = .8; 
        T[5][S][3] = .1; 
        T[5][S][7] = .1;

        T[6][N][36] = .8; 
        T[6][N][4] = .1;
        T[6][N][8] = .1;

        T[6][E][8] = .8; 
        T[6][E][36] = .1;
        T[6][E][6] = .1;

        T[6][W][4] = .8; 
        T[6][W][36] = .1; 
        T[6][W][6] = .1; 

        T[6][S][6] = .8; 
        T[6][S][4] = .1; 
        T[6][S][8] = .1;

        T[7][N][37] = .8; 
        T[7][N][5] = .1;
        T[7][N][9] = .1;

        T[7][E][9] = .8; 
        T[7][E][37] = .1;
        T[7][E][7] = .1;

        T[7][W][5] = .8; 
        T[7][W][37] = .1; 
        T[7][W][7] = .1; 

        T[7][S][7] = .8; 
        T[7][S][5] = .1; 
        T[7][S][9] = .1;

        T[8][N][38] = .8; 
        T[8][N][6] = .1;
        T[8][N][10] = .1;

        T[8][E][10] = .8; 
        T[8][E][38] = .1;
        T[8][E][8] = .1;

        T[8][W][6] = .8; 
        T[8][W][38] = .1; 
        T[8][W][8] = .1; 

        T[8][S][8] = .8; 
        T[8][S][6] = .1; 
        T[8][S][10] = .1;

        T[9][N][39] = .8; 
        T[9][N][7] = .1;
        T[9][N][11] = .1;

        T[9][E][11] = .8; 
        T[9][E][39] = .1;
        T[9][E][9] = .1;

        T[9][W][7] = .8; 
        T[9][W][39] = .1; 
        T[9][W][9] = .1; 

        T[9][S][9] = .8; 
        T[9][S][7] = .1; 
        T[9][S][11] = .1;

        T[10][N][10] = .8; 
        T[10][N][8] = .1;
        T[10][N][12] = .1;

        T[10][E][12] = .8; 
        T[10][E][10] = .2;

        T[10][W][8] = .8; 
        T[10][W][10] = .2; 

        T[10][S][10] = .8; 
        T[10][S][8] = .1;
        T[10][S][12] = .1; 

        T[11][N][11] = .8; 
        T[11][N][9] = .1;
        T[11][N][13] = .1;

        T[11][E][13] = .8; 
        T[11][E][11] = .2;

        T[11][W][9] = .8; 
        T[11][W][11] = .2; 

        T[11][S][11] = .8; 
        T[11][S][9] = .1;
        T[11][S][13] = .1; 

        T[12][N][12] = .8; 
        T[12][N][10] = .1;
        T[12][N][14] = .1;

        T[12][E][14] = .8; 
        T[12][E][12] = .2;

        T[12][W][10] = .8; 
        T[12][W][12] = .2; 

        T[12][S][12] = .8; 
        T[12][S][10] = .1;
        T[12][S][14] = .1; 

        T[13][N][13] = .8; 
        T[13][N][11] = .1;
        T[13][N][15] = .1;

        T[13][E][15] = .8; 
        T[13][E][13] = .2;

        T[13][W][11] = .8; 
        T[13][W][13] = .2; 

        T[13][S][13] = .8; 
        T[13][S][11] = .1;
        T[13][S][15] = .1; 

        T[14][N][14] = .8; 
        T[14][N][12] = .1;
        T[14][N][16] = .1;

        T[14][E][16] = .8; 
        T[14][E][14] = .2;

        T[14][W][12] = .8; 
        T[14][W][14] = .2; 

        T[14][S][14] = .8; 
        T[14][S][12] = .1;
        T[14][S][16] = .1; 

        T[15][N][15] = .8; 
        T[15][N][13] = .1;
        T[15][N][17] = .1;

        T[15][E][17] = .8; 
        T[15][E][15] = .2;

        T[15][W][13] = .8; 
        T[15][W][15] = .2; 

        T[15][S][15] = .8; 
        T[15][S][13] = .1;
        T[15][S][17] = .1; 

        T[16][N][16] = .8; 
        T[16][N][14] = .1;
        T[16][N][18] = .1;

        T[16][E][18] = .8; 
        T[16][E][16] = .2;

        T[16][W][14] = .8; 
        T[16][W][16] = .2; 

        T[16][S][16] = .8; 
        T[16][S][14] = .1;
        T[16][S][18] = .1; 

        T[17][N][17] = .8; 
        T[17][N][15] = .1;
        T[17][N][19] = .1;

        T[17][E][19] = .8; 
        T[17][E][17] = .2;

        T[17][W][15] = .8; 
        T[17][W][17] = .2; 

        T[17][S][17] = .8; 
        T[17][S][15] = .1;
        T[17][S][19] = .1; 

        T[18][N][18] = .8; 
        T[18][N][16] = .1;
        T[18][N][20] = .1;

        T[18][E][20] = .8; 
        T[18][E][18] = .2;

        T[18][W][16] = .8; 
        T[18][W][18] = .2; 

        T[18][S][18] = .8; 
        T[18][S][16] = .1;
        T[18][S][20] = .1; 

        T[19][N][19] = .8; 
        T[19][N][17] = .1;
        T[19][N][21] = .1;

        T[19][E][21] = .8; 
        T[19][E][19] = .2;

        T[19][W][17] = .8; 
        T[19][W][19] = .2; 

        T[19][S][19] = .8; 
        T[19][S][17] = .1;
        T[19][S][21] = .1; 

        T[20][N][20] = .8; 
        T[20][N][18] = .1;
        T[20][N][22] = .1;

        T[20][E][22] = .8; 
        T[20][E][20] = .2;

        T[20][W][18] = .8; 
        T[20][W][20] = .2; 

        T[20][S][20] = .8; 
        T[20][S][18] = .1;
        T[20][S][22] = .1; 

        T[21][N][21] = .8; 
        T[21][N][19] = .1;
        T[21][N][23] = .1;

        T[21][E][23] = .8; 
        T[21][E][21] = .2;

        T[21][W][19] = .8; 
        T[21][W][21] = .2; 

        T[21][S][21] = .8; 
        T[21][S][19] = .1;
        T[21][S][23] = .1; 

        T[22][N][22] = .8; 
        T[22][N][20] = .1;
        T[22][N][24] = .1;

        T[22][E][24] = .8; 
        T[22][E][22] = .2;

        T[22][W][20] = .8; 
        T[22][W][22] = .2; 

        T[22][S][22] = .8; 
        T[22][S][20] = .1;
        T[22][S][24] = .1; 

        T[23][N][23] = .8; 
        T[23][N][21] = .1;
        T[23][N][25] = .1;

        T[23][E][25] = .8; 
        T[23][E][23] = .2;

        T[23][W][21] = .8; 
        T[23][W][23] = .2; 

        T[23][S][23] = .8; 
        T[23][S][21] = .1;
        T[23][S][25] = .1; 

        T[24][N][24] = .8; 
        T[24][N][22] = .1;
        T[24][N][26] = .1;

        T[24][E][26] = .8; 
        T[24][E][24] = .2;

        T[24][W][22] = .8; 
        T[24][W][24] = .2; 

        T[24][S][24] = .8; 
        T[24][S][22] = .1;
        T[24][S][26] = .1; 

        T[25][N][25] = .8; 
        T[25][N][23] = .1;
        T[25][N][27] = .1;

        T[25][E][27] = .8; 
        T[25][E][25] = .2;

        T[25][W][23] = .8; 
        T[25][W][25] = .2; 

        T[25][S][25] = .8; 
        T[25][S][23] = .1;
        T[25][S][27] = .1; 

        T[26][N][26] = .8; 
        T[26][N][24] = .1;
        T[26][N][posLocationWithKey] = .1;

        T[26][E][posLocationWithKey] = .8; 
        T[26][E][26] = .2;

        T[26][W][24] = .8; 
        T[26][W][26] = .2; 

        T[26][S][26] = .8; 
        T[26][S][24] = .1;
        T[26][S][posLocationWithKey] = .1; 

        T[27][N][27] = .8; 
        T[27][N][25] = .1;
        T[27][N][posLocationWithoutKey] = .1;

        T[27][E][posLocationWithoutKey] = .8; 
        T[27][E][27] = .2;

        T[27][W][25] = .8; 
        T[27][W][27] = .2; 

        T[27][S][27] = .8; 
        T[27][S][25] = .1;
        T[27][S][posLocationWithoutKey] = .1;

        T[30][N][40] = (1 - keyLoss) * .8; ;;
        T[30][N][41] = (keyLoss) * .8; ;;
        T[30][N][30] = .1; 
        T[30][N][32] = .1;

        T[30][E][40] = (1 - keyLoss) * .1; ;
        T[30][E][41] = (keyLoss) * .1; ;
        T[30][E][32] = .8; 
        T[30][E][0] = .1;

        T[30][W][40] = (1 - keyLoss) * .1; ;
        T[30][W][41] = (keyLoss) * .1; ;
        T[30][W][30] = .8;
        T[30][W][0] = .1;

        T[30][S][30] = .1;
        T[30][S][0] = .8; 
        T[30][S][32] = .1; 

        T[31][N][41] = .8;
        T[31][N][31] = .1; 
        T[31][N][33] = .1;

        T[31][E][33] = .8; 
        T[31][E][41] = .1;
        T[31][E][1] = .1;

        T[31][W][31] = .8;
        T[31][W][41] = .1;
        T[31][W][1] = .1;

        T[31][S][1] = .8; 
        T[31][S][31] = .1;
        T[31][S][33] = .1; 

        T[32][N][42] = .8;
        T[32][N][30] = .1; 
        T[32][N][34] = .1;

        T[32][E][34] = .8;
        T[32][E][2] = .1; 
        T[32][E][42] = .1;

        T[32][W][30] = .8;
        T[32][W][2] = .1;
        T[32][W][42] = .1;

        T[32][S][2] = .8;
        T[32][S][30] = .1; 
        T[32][S][34] = .1; 

        T[33][N][43] = .8;
        T[33][N][31] = .1; 
        T[33][N][35] = .1;

        T[33][E][35] = .8;
        T[33][E][3] = .1; 
        T[33][E][43] = .1;

        T[33][W][31] = .8;
        T[33][W][3] = .1;
        T[33][W][43] = .1;

        T[33][S][3] = .8;
        T[33][S][31] = .1; 
        T[33][S][35] = .1; 

        T[34][N][44] = .8;
        T[34][N][32] = .1; 
        T[34][N][36] = .1;

        T[34][E][36] = .8;
        T[34][E][4] = .1; 
        T[34][E][44] = .1;

        T[34][W][32] = .8;
        T[34][W][4] = .1;
        T[34][W][44] = .1;

        T[34][S][4] = .8;
        T[34][S][32] = .1; 
        T[34][S][36] = .1; 

        T[35][N][45] = .8;
        T[35][N][33] = .1; 
        T[35][N][37] = .1;

        T[35][E][37] = .8;
        T[35][E][5] = .1; 
        T[35][E][45] = .1;

        T[35][W][33] = .8;
        T[35][W][5] = .1;
        T[35][W][45] = .1;

        T[35][S][5] = .8;
        T[35][S][33] = .1; 
        T[35][S][37] = .1; 

        T[36][N][46] = .8;
        T[36][N][34] = .1; 
        T[36][N][38] = .1;

        T[36][E][38] = .8;
        T[36][E][6] = .1; 
        T[36][E][46] = .1;

        T[36][W][34] = .8;
        T[36][W][6] = .1;
        T[36][W][46] = .1;

        T[36][S][6] = .8;
        T[36][S][34] = .1; 
        T[36][S][38] = .1; 

        T[37][N][47] = .8;
        T[37][N][35] = .1; 
        T[37][N][39] = .1;

        T[37][E][39] = .8;
        T[37][E][7] = .1; 
        T[37][E][47] = .1;

        T[37][W][35] = .8;
        T[37][W][7] = .1;
        T[37][W][47] = .1;

        T[37][S][7] = .8;
        T[37][S][35] = .1; 
        T[37][S][39] = .1; 

        T[38][N][48] = .8;
        T[38][N][36] = .1; 
        T[38][N][38] = .1;

        T[38][E][38] = .8;
        T[38][E][8] = .1; 
        T[38][E][48] = .1;

        T[38][W][36] = .8;
        T[38][W][8] = .1;
        T[38][W][48] = .1;

        T[38][S][8] = .8;
        T[38][S][36] = .1; 
        T[38][S][38] = .1; 

        T[39][N][49] = .8;
        T[39][N][37] = .1; 
        T[39][N][39] = .1;

        T[39][E][39] = .8;
        T[39][E][9] = .1; 
        T[39][E][49] = .1;

        T[39][W][37] = .8;
        T[39][W][9] = .1;
        T[39][W][49] = .1;

        T[39][S][9] = .8;
        T[39][S][37] = .1; 
        T[39][S][39] = .1; 

        T[40][N][40] = 0.1 * (1.0 - keyLoss);
        T[40][N][41] = 0.1 * keyLoss; 
        T[40][N][50] = 0.8; 
        T[40][N][42] = 0.1;

        T[40][E][50] = 0.1;
        T[40][E][42] = 0.8; 
        T[40][E][30] = 0.1;

        T[40][W][30] = 0.1;
        T[40][W][40] = 0.8 * (1.0 - keyLoss);
        T[40][W][41] = 0.8 * keyLoss;
        T[40][W][50] = 0.1;

        T[40][S][42] = 0.1;
        T[40][S][30] = 0.8; 
        T[40][S][40] = 0.1 * (1.0 - keyLoss);
        T[40][S][41] = 0.1 * keyLoss;

        // T[40][N][50] = 0.8;
        // T[40][N][40] = 0.1;
        // T[40][N][42] = 0.1;

        // T[40][E][42] = 0.8;
        // T[40][E][30] = 0.1;
        // T[40][E][50] = 0.1;

        // T[40][W][40] = 0.8;
        // T[40][W][50] = 0.1; 
        // T[40][W][30] = 0.1;

        // T[40][S][30] = 0.8;
        // T[40][S][40] = 0.1;
        // T[40][S][42] = 0.1;

        T[41][N][51] = 0.8;
        T[41][N][41] = 0.1;
        T[41][N][43] = 0.1;

        T[41][E][43] = 0.8;
        T[41][E][31] = 0.1;
        T[41][E][51] = 0.1;

        T[41][W][41] = 0.8;
        T[41][W][51] = 0.1; 
        T[41][W][31] = 0.1;

        T[41][S][31] = 0.8;
        T[41][S][41] = 0.1;
        T[41][S][43] = 0.1;

        T[42][N][52] = 0.8;
        T[42][N][40] = (1 - keyLoss) * .1;
        T[42][N][41] = keyLoss * .1; 
        T[42][N][44] = 0.1;

        T[42][E][44] = 0.8;
        T[42][E][32] = 0.1;
        T[42][E][52] = 0.1;

        T[42][W][40] = (1 - keyLoss) * 0.8;
        T[42][W][41] = keyLoss * 0.8;
        T[42][W][52] = 0.1;
        T[42][W][32] = 0.1;

        T[42][S][32] = 0.8;
        T[42][S][40] = (1 - keyLoss) * .1;
        T[42][S][41] =  keyLoss * .1; 
        T[42][S][44] = 0.1;

        T[43][N][53] = 0.8;
        T[43][N][41] = 0.1;
        T[43][N][45] = 0.1;

        T[43][E][45] = 0.8;
        T[43][E][33] = 0.1;
        T[43][E][53] = 0.1;

        T[43][W][41] = 0.8;
        T[43][W][53] = 0.1;
        T[43][W][33] = 0.1;

        T[43][S][33] = 0.8;
        T[43][S][41] = 0.1;
        T[43][S][45] = 0.1;

        T[46][N][56] = 0.8;
        T[46][N][44] = 0.1;
        T[46][N][48] = 0.1;

        T[46][E][48] = 0.8;
        T[46][E][36] = 0.1;
        T[46][E][56] = 0.1;

        T[46][W][44] = 0.8;
        T[46][W][56] = 0.1;
        T[46][W][36] = 0.1;

        T[46][S][36] = 0.8;
        T[46][S][44] = 0.1;
        T[46][S][48] = 0.1;

        T[47][N][57] = 0.8;
        T[47][N][45] = 0.1;
        T[47][N][49] = 0.1;

        T[47][E][49] = 0.8;
        T[47][E][37] = 0.1;
        T[47][E][57] = 0.1;

        T[47][W][45] = 0.8;
        T[47][W][57] = 0.1;
        T[47][W][37] = 0.1;

        T[47][S][37] = 0.8;
        T[47][S][45] = 0.1;
        T[47][S][49] = 0.1;

        T[50][N][58] = 0.8;
        T[50][N][50] = 0.1;
        T[50][N][52] = 0.1;

        T[50][E][52] = 0.8;
        T[50][E][40] =  (1 - keyLoss) * .1; ;
        T[50][E][41] =  keyLoss * .1; 
        T[50][E][58] = 0.1;

        T[50][W][50] = 0.8; 
        T[50][W][58] = 0.1;
        T[50][W][40] = (1 - keyLoss) * .1; ;
        T[50][W][41] = keyLoss * .1; 

        T[50][S][40] =  (1 - keyLoss) * .8; ;
        T[50][S][41] =  keyLoss * .8; 
        T[50][S][50] = 0.1;
        T[50][S][52] = 0.1;

        T[51][N][59] = 0.8;
        T[51][N][51] = 0.1;
        T[51][N][53] = 0.1;

        T[51][E][53] = 0.8;
        T[51][E][41] = 0.1;
        T[51][E][59] = 0.1;

        T[51][W][51] = 0.8; 
        T[51][W][59] = 0.1;
        T[51][W][41] = 0.1;

        T[51][S][41] = 0.8;
        T[51][S][51] = 0.1;
        T[51][S][53] = 0.1;

        T[52][N][60] = 0.8;
        T[52][N][50] = 0.1;
        T[52][N][54] = 0.1;

        T[52][E][54] = 0.8;
        T[52][E][60] = 0.1;
        T[52][E][42] = 0.1;

        T[52][W][50] = 0.8; 
        T[52][W][42] = 0.1;
        T[52][W][60] = 0.1;

        T[52][S][42] = 0.8;
        T[52][S][50] = 0.1;
        T[52][S][54] = 0.1;

        T[53][N][61] = 0.8;
        T[53][N][51] = 0.1;
        T[53][N][55] = 0.1;

        T[53][E][55] = 0.8;
        T[53][E][61] = 0.1;
        T[53][E][43] = 0.1;

        T[53][W][51] = 0.8; 
        T[53][W][43] = 0.1;
        T[53][W][61] = 0.1;

        T[53][S][43] = 0.8;
        T[53][S][51] = 0.1;
        T[53][S][55] = 0.1;

        T[54][N][62] = 0.8;
        T[54][N][52] = 0.1;
        T[54][N][56] = 0.1;

        T[54][E][56] = 0.8;
        T[54][E][62] = 0.1;
        T[54][E][44] = 0.1;

        T[54][W][52] = 0.8; 
        T[54][W][44] = 0.1;
        T[54][W][62] = 0.1;

        T[54][S][44] = 0.8;
        T[54][S][52] = 0.1;
        T[54][S][56] = 0.1;

        T[55][N][63] = 0.8;
        T[55][N][53] = 0.1;
        T[55][N][57] = 0.1;

        T[55][E][57] = 0.8;
        T[55][E][63] = 0.1;
        T[55][E][45] = 0.1;

        T[55][W][53] = 0.8; 
        T[55][W][45] = 0.1;
        T[55][W][63] = 0.1;

        T[55][S][45] = 0.8;
        T[55][S][53] = 0.1;
        T[55][S][57] = 0.1;

        T[56][N][64] = 0.8;
        T[56][N][56] = 0.1;
        T[56][N][54] = 0.1;

        T[56][E][56] = 0.8;
        T[56][E][64] = 0.1;
        T[56][E][46] = 0.1;

        T[56][W][54] = 0.8; 
        T[56][W][64] = 0.1;
        T[56][W][46] = 0.1;

        T[56][S][46] = 0.8;
        T[56][S][56] = 0.1;
        T[56][S][54] = 0.1;

        T[57][N][64] = 0.8;
        T[57][N][57] = 0.1;
        T[57][N][55] = 0.1; 

        T[57][E][57] = 0.8;
        T[57][E][64] = .1; 
        T[57][E][47] = 0.1;

        T[57][W][55] = 0.8; 
        T[57][W][64] = 0.1;
        T[57][W][47] = 0.1;

        T[57][S][47] = 0.8;
        T[57][S][57] = 0.1;
        T[57][S][55] = 0.1;
        //hello
        // T[0][N][30] = 0.8; 
        // T[0][N][0] = 0.1; 
        // T[0][N][2] = 0.1; 

        // T[0][E][2] = 0.8; 
        // T[0][E][0] = 0.1; 
        // T[0][E][30] = 0.1; 

        // T[0][W][0] = .9; 
        // T[0][W][30] = .1;

        // T[0][S][0] = .9; 
        // T[0][S][2] = .1;

        T[58][N][58] = 0.9;
        T[58][N][60] = 0.1;

        T[58][E][60] = 0.8;
        T[58][E][58] = 0.1;
        T[58][E][50] = 0.1;

        T[58][W][58] = 0.9; 
        T[58][W][50] = 0.1;

        T[58][S][50] = 0.8;
        T[58][S][60] = 0.1;
        T[58][S][58] = 0.1;

        T[59][N][59] = 0.9;
        T[59][N][61] = 0.1;

        T[59][E][61] = 0.8;
        T[59][E][59] = 0.1;
        T[59][E][51] = 0.1;

        T[59][W][59] = 0.9; 
        T[59][W][51] = 0.1;

        T[59][S][51] = 0.8;
        T[59][S][61] = 0.1;
        T[59][S][59] = 0.1;

        T[60][N][60] = 0.8;
        T[60][N][58] = 0.1;
        T[60][N][62] = 0.1;

        T[60][E][62] = 0.8;
        T[60][E][60] = 0.1;
        T[60][E][52] = 0.1;

        T[60][W][58] = 0.8; 
        T[60][W][60] = 0.1; 
        T[60][W][52] = 0.1;

        T[60][S][52] = 0.8;
        T[60][S][58] = 0.1;
        T[60][S][62] = 0.1;

        T[61][N][61] = 0.8;
        T[61][N][59] = 0.1;
        T[61][N][63] = 0.1;

        T[61][E][63] = 0.8;
        T[61][E][61] = 0.1;
        T[61][E][53] = 0.1;

        T[61][W][59] = 0.8; 
        T[61][W][61] = 0.1; 
        T[61][W][53] = 0.1;

        T[61][S][53] = 0.8;
        T[61][S][59] = 0.1;
        T[61][S][63] = 0.1;

        T[62][N][62] = 0.8;
        T[62][N][60] = 0.1;
        T[62][N][64] = 0.1;

        T[62][E][64] = 0.8;
        T[62][E][62] = 0.1;
        T[62][E][54] = 0.1;

        T[62][W][60] = 0.8; 
        T[62][W][62] = 0.1; 
        T[62][W][54] = 0.1;

        T[62][S][54] = 0.8;
        T[62][S][60] = 0.1;
        T[62][S][64] = 0.1;

        T[63][N][63] = 0.8;
        T[63][N][61] = 0.1;
        T[63][N][64] = 0.1;

        T[63][E][64] = 0.8;
        T[63][E][63] = 0.1;
        T[63][E][55] = 0.1;

        T[63][W][61] = 0.8; 
        T[63][W][63] = 0.1; 
        T[63][W][55] = 0.1;

        T[63][S][55] = 0.8;
        T[63][S][61] = 0.1;
        T[63][S][64] = 0.1;

        T[64][N][64] = 0.9;
        T[64][N][62] = 0.1;

        T[64][E][64] = 0.9;
        T[64][E][56] = 0.1;

        T[64][W][62] = 0.8; 
        T[64][W][64] = 0.1; 
        T[64][W][56] = 0.1;

        T[64][S][56] = 0.8;
        T[64][S][62] = 0.1;
        T[64][S][64] = 0.1;
    } 
}

